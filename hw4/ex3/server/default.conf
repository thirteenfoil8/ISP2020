server {
    listen      80;

    return 301 https://$host$request_uri;
}

server {
    listen      443;
    root        /www;

    ssl on;
    #ssl_certificate /certs/nginx-selfsigned.crt; 3.B.
    #ssl_certificate_key /certs/nginx-selfsigned.key; 3.B.
    ssl_certificate /certs/request.crt;
    ssl_certificate_key /certs/request.key;

    # This doesn't seem to be necessary for this homework, but is recommended setup
    #      (only HSTS enabling was needed, it is somewhere at the end)
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";

    # enable HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
}
